" .ideavimrc is a configuration file for IdeaVim plugin. It uses
"   the same commands as the original .vimrc configuration.
" You can find a list of commands here: https://jb.gg/h38q75
" Find more examples here: https://jb.gg/share-ideavimrc


set clipboard=unnamed,unnamedplus
"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=5

" Do incremental searching.
set incsearch

" Don't use Ex mode, use Q for formatting.
map Q gq

" set <leader> to <space>
let mapleader = " "

" --- Enable IdeaVim plugins https://jb.gg/ideavim-plugins

" Highlight copied text
Plug 'machakann/vim-highlightedyank'
" Commentary plugin
Plug 'tpope/vim-commentary'

set which-key
let g:WhichKey_FontSize = 12
" disable the timeout option
set notimeout

"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
"" Map \r to the Reformat Code action
nmap <leader>cf <Action>(ReformatCode)

"" Map \b to toggle the breakpoint on the current line
nmap <leader>dd <Action>(ToggleLineBreakpoint)
nmap <leader>df <Action>(Resume)
nmap <leader>de <Action>(QuickEvaluateExpression)
nmap <leader>dp <Action>(EvaluateExpression)
nmap <leader>dr <Action>(Rerun)
nmap <leader>dt <Action>(Stop)

nmap <leader>ff <Action>(GotoFile)

nmap <leader>fw <Action>(TextSearchAction)

nmap <leader>x <Action>(CloseContent)

nmap <leader>a <Action>(GotoAction)

nmap <leader>fc <Action>(GotoClass)

nmap <Tab> <Action>(NextTab)
nmap <S-Tab> <Action>(PreviousTab)

nmap <leader>o <Action>(ActivateStructureToolWindow)

nmap q <Action>(HideActiveWindow)
nmap <leader>c <Action>(CommentByLineComment)
nmap <leader>re <Action>(RenameElement)

nmap <leader>gb <Action>(Git.Branches)
nmap <leader>gc <Action>(GitCheckoutFromInputAction)

nmap <leader>pp <Action>(ManageRecentProjects)
nmap <leader>pd <Action>(Debug)
nmap <leader>pr <Action>(Run)
nmap <leader>pt <Action>(ActivateTerminalToolWindow)

nnoremap \r :action IdeaVim.ReloadVimRc.reload<CR>

set nerdtree
nmap <leader>e :NERDTreeFocus<CR>
let g:NERDTreeMapCloseDir = '<BS>'
